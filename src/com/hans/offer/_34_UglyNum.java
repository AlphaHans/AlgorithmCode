package com.hans.offer;

/**
 * Created by Hans on 17/2/26.
 * 丑数:
 * 题目：我们把只包含因子2、3和5的数称作丑数（Ugly Number）。
 * 求按从小到大的顺序的第1500个丑数。例如6、8都是丑数，但14不是，因为它包含因子7。习惯上我们把1当做第一个丑数。
 * <p>
 * 直观解法:
 * 将一个数进行判定,是否为丑数。 然后写一个循环方法,即可拿到第1500位的丑数
 * boolean isUgly(int num) {
 * while(num%2==0) {
 * num /=2;
 * }
 * while(num%3) {
 * num /=3;
 * }
 * while(num%5) {
 * num /=5;
 * }
 * return num==1;
 * }
 * <p>
 * 看了书本之后我想到的解法:
 * 根据前面的丑数求后面的丑数。我们可以知道2,3,5是最基本的丑数
 * 那么后续的丑数都可以由这些丑数推到出来。 比如2*2 = 4,2*3=6,2*5=10,3*3=9,3*5=15,5*5=25
 * 可以得到以后新的List:2,3,5,4,6,10,9,15,25 那么后续的也可以由刚刚得到的6,10,9,15,25 来*2或3或5的得出来。
 * 并且在过程中保持List的有序,那么到最终的n的时候,最后一位就是了。
 * 实现起来好险也较为麻烦
 * <p>
 * 书本的解法感觉和上面类似。
 */
public class _34_UglyNum {
}
